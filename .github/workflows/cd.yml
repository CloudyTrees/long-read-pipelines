# Continuous integration and delivery of the main branch.

name: CI/CD

on:
  # Triggers the workflow on push to main branch only
  push:
    branches: [ main ]
    paths-ignore: # ignores changes to the version tracking file when auto-bumping & releasing
      - 'VERSION.json'

jobs:

  # Run Python tests on Github runner
  tox_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
      - name: Checkout github repo (+ download lfs dependencies)
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Checkout LFS objects
        run: git lfs checkout

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          $CONDA/bin/conda install -y -c bioconda womtool
          echo "$CONDA/bin" >> $GITHUB_PATH

      - name: Test with tox
        run: tox

      # Send Slack message on workflow failure
      - name: Slack Failure Notification
        if: failure()
        uses: rtCamp/action-slack-notify@v2.0.2
        env:
          SLACK_COLOR: '#DF5A49'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_ICON: https://github.com/broadinstitute/long-read-pipelines/blob/main/.github/workflows/dnabad.png?raw=true
          SLACK_USERNAME: long-read-pipelines

  main_test:
    # The type of runner that the job will run on
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2

    # Runs a set of commands using the runners shell
    - name: Continuous integration test suite
      run: |
        python3 scripts/ci/run_test_suite.py

    # Send Slack message on workflow failure
    - name: Slack Failure Notification
      if: failure()
      uses: rtCamp/action-slack-notify@v2.0.2
      env:
        SLACK_COLOR: '#DF5A49'
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_ICON: https://github.com/broadinstitute/long-read-pipelines/blob/main/.github/workflows/dnabad.png?raw=true
        SLACK_USERNAME: long-read-pipelines

    # Send Slack message on workflow success
    - name: Slack Success Notification
      if: success()
      uses: rtCamp/action-slack-notify@v2.0.2
      env:
        SLACK_COLOR: '#50D9C9'
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_ICON: https://github.com/broadinstitute/long-read-pipelines/blob/main/.github/workflows/dnagood.png?raw=true
        SLACK_USERNAME: long-read-pipelines

  # "tag_n_release" for auto tagging and releasing after push to main
  # This is done following the example shown in the following medium article
  # https://medium.com/swlh/bump-bump-bump-d0dab616e83
  # and the examples shown in the repo
  # https://github.com/TriPSs/conventional-changelog-action
  tag_n_release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.SEE_SEE }}

      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          skip-commit: 'true' # Do not create a release commit.
          version-file: 'VERSION.json'
          version-path: 'version'
          tag-prefix: '' # Prefix for the git tags.
          github-token: ${{ secrets.github_token }}
          git-message: 'chore(release): {version}' # Commit message that is used when committing the changelog.
          git-user-name: 'Awesome Changelog Action'
          git-user-email: 'awesome_changelog@github.actions.com'
          git-pull-method: --ff-only
          preset: 'angular' # Preset that is used from conventional commits.
          release-count: '10' # Number of releases to preserve in changelog. Default 5, use 0 to regenerate all.
          output-file: 'false' # File to output the changelog to. Default CHANGELOG.md, when providing 'false' no file will be generated / updated.
          skip-on-empty: 'false' # Boolean to specify if you want to skip empty release (no-changelog generated).
          skip-version-file: 'false' # Do not update the version file.
          
      - name: Create Release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
